#!/usr/bin/env node

var argv        = require('optimist').argv;
var util        = require('util');
var elasticdump = require( __dirname + "/../elasticdump.js" ).elasticdump;

// For future developers.  If you add options here, be sure to add the option to test suite tests where necessary
var defaults = {
  limit:           100,
  offset:          0,
  debug:           false,
  type:            'data',
  delete:          false,
  all:             false,
  bulk:            false,
  maxSockets:      null,
  input:           null,
  'input-index':   null,
  output:          null,
  'output-index':  null,
  inputTransport:  null,
  outputTransport: null,
  searchBody:      null,
  sourceOnly:      false,
  jsonLines:       false,
  format:          '',
  'ignore-errors': false,
  scrollTime:      '10m',
  'bulk-use-output-index-name': false,
  'bulk-mode':     'index',
  timeout:         null,
  skip:            null,
  toLog:           null,
};

var options = {};

for(var i in defaults){
  options[i] = defaults[i];
  if(argv[i]){
    options[i] = argv[i];
  }
  if(options[i] === 'true' ){ options[i] = true; }
  if(options[i] === 'false'){ options[i] = false; }
  // searchBody needs to go from JSON to object in order for size to be added later during elasticsearch query
  if(i == "searchBody") {
    options[i] = JSON.parse(options[i]);
  }
}

var log = function(type, message){
  if(type === 'debug'){
    if(options.debug === true){
      message = "[debug] | " + message;
    }else{
      return false;
    }
  }else{
    message = (new Date().toUTCString()) + " | " + message;
  }
  console.log(message);
};

if(argv.help === true){
  var helpText = require('fs').readFileSync( __dirname + '/../lib/help.txt');
  console.log(String(helpText));
}else{
  var dumper = new elasticdump(options.input, options.output, options);

  dumper.on('log',   function(message){ log('log',   message); });
  dumper.on('debug', function(message){ log('debug', message); });
  dumper.on('error', function(error){   log('log', 'Error Emitted => ' + ( error.message || JSON.stringify(error)) ); });

  dumper.dump(function(error, total_writes){
    if(error){
      process.exit(1);
    }else{
      process.exit(0);
    }
  });
}
